
<main>
  
  <div class="diapo">
      <div class="elements">
        {% assign premier = true %}
        {%for block in section.blocks %}
        		{% if premier == true%}
                  	<div class="element active"> 

                          <img class="imageHomePage" srcset ="{{block.settings.image | img_url:'master'}}" style="filter: brightness({{block.settings.blackFiltre}}%);"/>
                      
                      {% if block.settings.droite-gauche == true %}
                      <div class="caption" style="align-items:flex-end; right:{{block.settings.distance}}%;">
                      {% else %}
                      <div class="caption" style="align-items:flex-start; left:{{block.settings.distance}}%;"> 
                      {% endif %}
                        <h2 class="titre">{{block.settings.heading}}</h2>
                        <h3 class="sousText">{{block.settings.sousText}}</h3> 

                        <a class="lienHomePage" href="{{block.settings.buttonLien}}">
                          <div class="bouton"><p class="textBouton">{{block.settings.buttonText}}</p></div>
                        </a>
                        
 							 
                      </div>
                    </div>
            		{% assign premier = false %} 
            	{% elsif premier == false%}
                    <div class="element">
 
                            <img class="imageHomePage" srcset ="{{block.settings.image | img_url:'master'}}" style="filter: brightness({{block.settings.blackFiltre}}%);"/>

                        {% if block.settings.droite-gauche == true %}
                        <div class="caption" style="align-items:flex-end; right:{{block.settings.distance}}%;">
                        {% else %}
                        <div class="caption" style="align-items:flex-start; left:{{block.settings.distance}}%;">
                        {% endif %}
                          <h2 class="titre">{{block.settings.heading}}</h2>
                          <h3 class="sousText">{{block.settings.sousText}}</h3>
 
                          <a class="lienHomePage" href="{{block.settings.buttonLien}}">
                            <div class="bouton"><p class="textBouton">{{block.settings.buttonText}}</p></div>
                          </a>
               

                        </div>
                      </div>
            	{% endif %}
          
        {%endfor%}
        {% assign premier = true %}
        {%for block in section.blocks %}
        		{% if premier == true%}
                  	<div class="element active"> 

                          <img class="imageHomePage" srcset ="{{block.settings.image | img_url:'master'}}" style="filter: brightness({{block.settings.blackFiltre}}%);"/>
                      
                      {% if block.settings.droite-gauche == true %}
                      <div class="caption" style="align-items:flex-end; right:{{block.settings.distance}}%;">
                      {% else %}
                      <div class="caption" style="align-items:flex-start; left:{{block.settings.distance}}%;"> 
                      {% endif %}
                        <h2 class="titre">{{block.settings.heading}}</h2>
                        <h3 class="sousText">{{block.settings.sousText}}</h3> 

                        <a class="lienHomePage" href="{{block.settings.buttonLien}}">
                          <div class="bouton"><p class="textBouton">{{block.settings.buttonText}}</p></div>
                        </a>
                        
 							 
                      </div>
                    </div>
            		{% assign premier = false %} 
                {%endif%} 
         {% endfor %}
       </div>
    {% if section.settings.fleche %}
    <div id="nav-gauche" class="las la-chevron-left"><img id="image-gauche" src="{{section.settings.fleche | img_url:'50px'}}"></div>	
    <div id="nav-droite" class="las la-chevron-right"><img src="{{section.settings.fleche | img_url:'50px'}}"></div>
    {% else %}
    <div id="nav-gauche" class="las la-chevron-left">←</div>	
    <div id="nav-droite" class="las la-chevron-right">→</div>
    {% endif %} 
    <div class="informationBox">
       <div id="petitPoint">
       </div>
      
    </div> 
    
    <div id="data" style="color:rgba(0,0,0,0);"> 
        <h5 id="time">
          {{section.settings.transitionTime}}
        </h5> 
        <h5 id ="color1">  
          {{section.settings.points}}
        </h5>
        <h5 id ="color2"> 
          {{section.settings.lePoint}} 
        </h5>
      </div>
    
  </div>
</main>
{% schema %} 
  {
    "name": "Diaporama",
    "settings": [
					
  					{
						"type":"text",
						"label":"temp entre les transition (en ms)",
						"id":"transitionTime"
					},
					{
						"type":"image_picker",
						"label":"Les flêches",
						"id" : "fleche"
					},
					{
						"type":"color",
						"label":"les points", 
						"id" : "points" 
					},
					{
						"type":"color",
						"label":"le Point",
						"id" : "lePoint"
					}

				],
	"blocks" : [
				{
					"type":"image",
					"name":"image block",
					"settings":[
								{
									"type":"image_picker",
									"label":"Les images",
									"id" : "image"
								},
								{
									"type":"range",
									"label":"filtre noir",
									"id" : "blackFiltre",
									"min" :0, 
									"max" :100,
									"step":1,
									"unit":"%",
									"default":100
								},
								{
                                    "type":"text",
                                    "label":"titre",
                                    "id":"heading"
                                },
                                {
                                    "type":"text",
                                    "label":"sous-text",
                                    "id":"sousText"
                                },
                                {
                                    "type":"text",
                                    "label":"text-bouton",
                                    "id":"buttonText"
                                },
                                {
                                    "type":"text",
                                    "label":"lien-bouton",
                                    "id":"buttonLien"
                                },
                                {
                                    "type":"checkbox",
                                    "label":"droite oui gauche non",
                                    "id":"droite-gauche"
                                },
								{
									"type":"range",
									"label":"distance du bord",
									"id" : "distance", 
									"min" :0, 
									"max" :100,
									"step":1,
									"unit":"%",
									"default":40 
								}
								]
				}
	],
    "presets": [
                    {
                      "name": "Diaporama",
                      "category": "banner"
                    }
	
    ]
  }
{% endschema %}

{% stylesheet %}

#data{ 
  z-index:-10;
  position:absolute;
  top:10%;
  left:4000px;
}  
 
 

body{
	margin:0;
}

main{
	width:100%;
	margin:auto;
}

.diapo{
	position: relative;
	overflow: hidden;

}  

#nav-droite,#nav-gauche{
	position: absolute;
	top: 30%;  
	transform: translateY(-50%);
	color: white;
	font-size: 3em;
	
	width:100px;
	height:50px;

	cursor:pointer;
}

#nav-droite{
	right: -30px;  
}

#nav-gauche{
	left: 15px;  
}

#image-gauche{
	transform: rotate(0.5turn);  
}

.titre{
	 
	color:white;  
	font-size: 30px;
}

.sousText{
	
	color:white;
	font-size: 25px;
}

.lienHomePage{ 
	
}
.bouton{ 
	width: 200px;  
	height:50px;
	background-color:white;
	border-radius:5px;

	display:flex;
	justify-content:center;
	align-items:center; 
}
.textBouton{ 
	color:blue;
	font-size: 18px
}
.informationBox{
	display:flex;
	justify-content:center;
	align-items:center; 
	flex-direction: column;

	z-index:2;  
	
	position: absolute;
	bottom:50px;  
	width:100%;
	
}




.elements{
	display: flex;
	transition: 1s linear;
	
}

.element{
	flex:1 0 100%;
	position: relative;
}

.element > img{
	width: 100%
}

.imageHomePage{
	
	
	width:100%;
	
	 
}

.caption{
	display: flex;
	justify-content:flex-start; 
 
	flex-direction: column; 

	position: absolute;
	top: 30%;
   
	transform: translate(-50%, -50%);
	text-align:center;
	
	padding: 30px;
} 


#petitPoint{
	display:flex; 
	justify-content:space-between; 
}

.point{
	font-size:30px; 
	cursor:pointer; 
}

@media screen and (max-width: 1024px)
{
	.titre{
		font-size: 25px;
	} 
    .sousText{
		font-size: 20px;
	}
	.textBouton{
		font-size: 12px
	} 
	.informationBox{
  		bottom:20px;  
	
	}
	#nav-droite,#nav-gauche{
		top:60%; 
	} 
	.caption{
		left: 50%;
		justify-content:center; 
		align-items:center;  
	}
}


 
{% endstylesheet %}

{% javascript %}
	
	
	//variables
	let compteur = 0
	let timer, elements, slides, slideWidth   
	const boitePoint = document.getElementById("petitPoint")

	var time = document.getElementById("time").innerText; 
	var color1 = document.getElementById("color1").innerText;
	var color2 = document.getElementById("color2").innerText;


	window.onload = () => {
	
	const diapo = document.querySelector(".diapo")
	elements = document.querySelector(".elements")
	slides = document.getElementsByClassName("element")
	
	//largeur du diapo
	slideWidth = diapo.getBoundingClientRect().width
	
	let next = document.querySelector("#nav-droite")
	let prev = document.querySelector("#nav-gauche")

	nImage = slides.length -1; 
	
	boitePoint.style.width = nImage*20 + "px"; 
	
	for(i=0;i<nImage;i++){ 
        point = document.createElement("div")  
    	boitePoint.appendChild(point)  
  		
        point.classList.add("point")
        point.innerHTML = "•"
        
                           
        function selectPoint(index){
            point.addEventListener("click",function(){           
              compteur = index
              let decal = -slideWidth * compteur
              elements.style.transform = `translateX(${decal}px)`

              pointColor()
            })
    	}		 
                          
       	selectPoint(i) 
                           
      
    } 
    pointColor() 
                           
    

	next.addEventListener("click",slideNext)
	prev.addEventListener("click",slidePrev) 

	// diapo automatisé

	timer = setInterval(slideNext, time)
    
    next.addEventListener("mouseover",stopTimer)
	next.addEventListener("mouseout",startTimer)

	prev.addEventListener("mouseover",stopTimer)
	prev.addEventListener("mouseout",startTimer)

	//responsive disigne

	window.addEventListener("resize",function(){
	 slideWidth = diapo.getBoundingClientRect().width
	 slideNext() 
	});

	}

	
  function slideNext(){  
      let decal
	  console.log("test")
      compteur++ 
      if(compteur == nImage){ 
         decal = -slideWidth * (nImage)  
	  	 elements.style.transform = `translateX(${decal}px)`     
         setTimeout(slideNextinfinit,1001)    
           
      }else{ 
      	decal = -slideWidth * compteur
	  	elements.style.transform = `translateX(${decal}px)`
      }           
      setTimeout(pointColor,500)  
  }

  function slidePrev(){ 
      let decal
	  console.log("test") 
      compteur--
	  if(compteur == -1){
			compteur = nImage
            elements.style.transition= "0s linear"
            decal = -slideWidth * compteur 
         	elements.style.transform = `translateX(${decal}px)` 
          	setTimeout(slidePrevInfinit ,1)   
		}
      decal = -slideWidth * compteur
	  elements.style.transform = `translateX(${decal}px)`

	  setTimeout(pointColor,500)   
      
  }

	
  function stopTimer(){
		clearInterval(timer)
  }
 
  function startTimer(){
		timer = setInterval(slideNext, time)     
  }

  function pointColor(){
	var lesPoints = document.getElementsByClassName("point")
      for(i=0;i<nImage;i++){
        let pointColor = compteur
        if (pointColor == nImage){
        	pointColor = 0 
        }
		if(i==pointColor){
			lesPoints[i].style.color = color2;    
		}else{
			lesPoints[i].style.color = color1;  
		}
	  }
  
  }

  function slideNextinfinit(){
        elements.style.transition= "0s linear" 
         compteur = 0  
         decal = -slideWidth * compteur
	  	 elements.style.transform = `translateX(${decal}px)`
         setTimeout(function(){elements.style.transition= "1s linear"},100)  
        }
        
  function slidePrevInfinit(){
         
         elements.style.transition= "1s linear" 
         compteur--  
         decal = -slideWidth * compteur
	  	 elements.style.transform = `translateX(${decal}px)`

     	}
        
  function swap(){
        
        elements.addEventListener("mousedown",function(){
			console.log("click ")
        })
        
        }
 
{% endjavascript %}
